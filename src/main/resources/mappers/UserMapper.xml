<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.dao.UserDAO">


	<!-- 회원가입 -->
	<insert id="insertUser" parameterType="UserVO">
		INSERT INTO
		"USER"("U_NAME", "U_EMAIL", "U_ID", "U_PW", "U_AGE",
		"U_GENDER",
		"U_GROUP")
		VALUES( #{u_name}, #{u_email}, #{u_id}, #{u_pw}, #{u_age},
		#{u_gender}, #{u_group})
	</insert>

	<!-- 아이디 중복되면 회원가입 불가 -->
	<select id="signUp_break" parameterType="UserVO"
		resultType="int">
		SELECT
		count("U_ID") FROM "USER"
		WHERE "U_ID"=#{u_id}
	</select>

	<!-- 아이디 중복 확인 (ajax) -->
	<select id="idCheck_ajax" parameterType="String"
		resultType="Integer">
		SELECT count("U_ID") FROM "USER" WHERE "U_ID" = #{u_id}
	</select>

	<!-- 로그인 -->
	<select id="loginUser" parameterType="UserVO"
		resultType="UserVO">
		SELECT * FROM "USER"
		WHERE "U_ID"=#{u_id} AND "U_PW"=#{u_pw}
	</select>


	<!-- ............ MY PAGE ............ -->


	<!-- 회원정보 가져오기 -->
	<select id="getUser" resultType="UserVO" parameterType="UserVO">
		SELECT *
		FROM "USER"
		WHERE "U_NO" = #{u_no}
	</select>

	<!-- 회원 탈퇴 -->
	<delete id="deleteUser" parameterType="UserVO">
		DELETE FROM "USER"
		WHERE
		"U_PW" = #{u_pw} AND "U_ID" = #{u_id}
	</delete>

	<!-- 회원 정보수정 -->
	<update id="updateUser" parameterType="UserVO">
		UPDATE "USER" SET
		"U_NAME" = #{u_name},
		"U_EMAIL" = #{u_email},
		"U_COMMENT" = #{u_comment},
		"U_PHONE" = #{u_phone}
		<if test="file_name !=null">
			,file_name = #{file_name}
			,origin_file_name = #{origin_file_name}
			,file_size = #{file_size}
			,file_path = #{file_path}
		</if>
		WHERE "U_ID" = #{u_id}
	</update>

	<!-- 비밀번호 변경 -->
	<update id="updatePass" parameterType="UserVO">
		UPDATE "USER" SET
		"U_PW" =
		#{u_pw}
		WHERE "U_ID" = #{u_id}
	</update>


	<!-- ............ WISH LIST ............ -->


	<!-- 위시리스트 내역 보이기 -->
	<select id="getWishList" parameterType="WishVO"
		resultType="WishVO">
		SELECT w.wish_no AS wish_no,
		w.u_no AS u_no,
		w.fetv_no AS fetv_no,
		w.wish_state AS wish_state,
		f.fetv_name AS fetv_name, f.fetv_image AS fetv_image, f.fetv_area as fetv_area,
		f.fetv_startdate as fetv_startdate, f.fetv_enddate as fetv_enddate,
		f.fetv_short as fetv_short
		FROM (SELECT * FROM wishlist WHERE u_no = #{u_no} and wish_state = 0) as w
		INNER JOIN festival as f
		ON w.fetv_no = f.fetv_no
	</select>

	<!-- 위시리스트에 더하기 -->
	<insert id="addWish" parameterType="WishVO">
		INSERT INTO wishlist (u_no, fetv_no)
		VALUES(#{u_no},#{fetv_no})
	</insert>

	<!-- 위시리스트 지우기 -->
	<delete id="deleteWish" parameterType="WishVO">
		DELETE FROM wishlist
		WHERE wish_no = #{wish_no}
	</delete>

	<!-- 위시리스트 모두 지우기 -->
	<delete id="removeWishAll" parameterType="WishVO">
		DELETE wishlist
		WHERE u_no = #{u_no}
	</delete>

	<!-- 위시리스트 중복체크 -->
	<select id="checkWish" parameterType="WishVO" resultType="int">
		SELECT
		count (*) as count
		FROM wishlist
		WHERE fetv_no = #{fetv_no}
		AND u_no = #{u_no}
		AND wish_state = 0;
	</select>

	<!-- ............ ADMIN ............ -->
	<!-- 관리자 페이지에서 회원 관리 눌렀을 때 유저 목록 가져오기 -->
	<select id="getUserList" resultType="UserVO">
		SELECT *
		FROM "USER"
		WHERE "U_GROUP" != 3
		ORDER BY "U_NO" desc
	</select>

	<!-- 관리자 페이지에서 회원 관리 - 보기 눌렀을 때 유저 정보 가져오기 -->
	<select id="getUserInfo" parameterType="int" resultType="UserVO">
		SELECT *
		FROM "USER"
		WHERE "U_NO" = #{u_no}
	</select>

	<!-- 관리자 페이지에서 회원 정보 수정 - 저장 버튼 클릭 시 정보 수정 -->
	<update id="updateUserSubmit" parameterType="UserVO">
		UPDATE "USER" SET
		"U_NAME" = #{u_name},
		"U_EMAIL" = #{u_email},
		"U_COMMENT" = #{u_comment},
		"U_PHONE" = #{u_phone}
		WHERE "U_NO" = #{u_no}
	</update>
</mapper>
